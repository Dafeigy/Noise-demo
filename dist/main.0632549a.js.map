{"version":3,"sources":["../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","main/main.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","document","SRGBToLinear","LinearToSRGB","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","DisplayP3ToLinearSRGB","color","convertSRGBToLinear","LinearSRGBToDisplayP3","convertLinearToSRGB","TO_LINEAR","_TO_LINEAR","_defineProperty","FROM_LINEAR","_FROM_LINEAR","ColorManagement","enabled","legacyMode","workingColorSpace","colorSpace","convert","sourceColorSpace","targetColorSpace","sourceToLinear","targetFromLinear","concat","fromWorkingColorSpace","toWorkingColorSpace","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","encoding","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","WebGLRenderTarget","_EventDispatcher2","_super2","options","_this3","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_super3","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super4","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super5","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super6","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super7","count","_this8","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","geometry","attributes","position","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","p","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super8","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super9","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super10","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","setXYZW","onUpload","copyColorsArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","Int8BufferAttribute","_BufferAttribute","_super11","Uint8BufferAttribute","_BufferAttribute2","_super12","Uint8ClampedBufferAttribute","_BufferAttribute3","_super13","Int16BufferAttribute","_BufferAttribute4","_super14","Uint16BufferAttribute","_BufferAttribute5","_super15","Int32BufferAttribute","_BufferAttribute6","_super16","Uint32BufferAttribute","_BufferAttribute7","_super17","Float16BufferAttribute","_BufferAttribute8","_super18","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super19","Float64BufferAttribute","_BufferAttribute10","_super20","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super21","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$4","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super22","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","applyBoneTransform","raycaster","intersects","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super23","widthSegments","heightSegments","depthSegments","_this15","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputEncoding","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","_Material2","_super24","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super25","_this17","PerspectiveCamera","_Camera","_super26","fov","aspect","_this18","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super27","renderTarget","_this19","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","scene","_this$children","_slicedToArray","currentRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super28","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super29","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super30","_this22","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super31","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUvs2","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","useLegacyLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","onShaderError","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator","_createForOfIteratorHelper","_step","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV2","supportsVertexTextures","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super32","_this24","isMeshDepthMaterial","_Material4","_super33","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearEncoding","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super34","_this26","isArrayCamera","cameras","Group","_Object3D4","_super35","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator2","_step2","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","visibilityState","_iterator3","_step3","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super36","_this28","WebXRManager","_EventDispatcher6","_super37","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","planesLastChangedTimes","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","getPlanes","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","planesToRemove","_iterator4","_step4","_iterator5","_step5","_iterator6","_step6","lastChangedTime","lastKnownTime","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","createCanvasElement","display","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super38","FogExp2","Fog","Scene","_Object3D5","_super39","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super40","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super41","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super42","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","SkinnedMesh","_Mesh","_super43","_this34","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super44","_this35","isBone","DataTexture","_Texture5","_super45","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super46","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super47","_this38","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super48","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super49","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super50","_this41","LineLoop","_Line2","_super51","_this42","_Material7","_super52","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super53","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super54","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super55","_this46","CompressedTexture","_Texture8","_super56","_this47","CompressedArrayTexture","_CompressedTexture","_super57","_this48","CanvasTexture","_Texture9","_super58","_this49","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super59","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this50","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super60","aRadius","_this51","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super61","curveType","_this52","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super62","_this53","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super63","_this54","isCubicBezierCurve3","LineCurve","_Curve5","_super64","_this55","isLineCurve","LineCurve3","_Curve6","_super65","_this56","isLineCurve3","QuadraticBezierCurve","_Curve7","_super66","_this57","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super67","_this58","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super68","_this59","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super69","_this60","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super70","_this61","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super71","phiStart","phiLength","_this62","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super72","capSegments","radialSegments","_this63","CircleGeometry","_BufferGeometry4","_super73","thetaStart","thetaLength","_this64","segment","CylinderGeometry","_BufferGeometry5","_super74","radiusTop","radiusBottom","openEnded","_this65","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super75","_this66","PolyhedronGeometry","_BufferGeometry6","_super76","_this67","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super77","_this68","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super78","thresholdAngle","_this69","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super79","_this70","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super80","_this71","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super81","_this72","OctahedronGeometry","_PolyhedronGeometry3","_super82","_this73","RingGeometry","_BufferGeometry9","_super83","innerRadius","outerRadius","thetaSegments","phiSegments","_this74","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super84","_this75","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super85","_this76","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super86","_this77","TorusGeometry","_BufferGeometry12","_super87","tube","tubularSegments","_this78","TorusKnotGeometry","_BufferGeometry13","_super88","_this79","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super89","_this80","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super90","_this81","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super91","_this82","RawShaderMaterial","_ShaderMaterial","_super92","_this83","_Material9","_super93","_this84","_MeshStandardMaterial","_super94","_this85","_sheen","_clearcoat","_iridescence","_transmission","_toConsumableArray","_Material10","_super95","_this86","_Material11","_super96","_this87","_Material12","_super97","_this88","_Material13","_super98","_this89","_Material14","_super99","_this90","_LineBasicMaterial","_super100","_this91","arraySlice","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super101","_this92","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super102","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super103","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super104","ColorKeyframeTrack","_KeyframeTrack2","_super105","NumberKeyframeTrack","_KeyframeTrack3","_super106","QuaternionLinearInterpolant","_Interpolant4","_super107","QuaternionKeyframeTrack","_KeyframeTrack4","_super108","StringKeyframeTrack","_KeyframeTrack5","_super109","VectorKeyframeTrack","_KeyframeTrack6","_super110","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","HttpError","_Error","_super111","response","_this93","_wrapNativeSuper","FileLoader","_Loader","_super112","_this94","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super113","CompressedTextureLoader","_Loader3","_super114","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super115","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super116","urls","DataTextureLoader","_Loader6","_super117","texData","TextureLoader","_Loader7","_super118","Light","_Object3D11","_super119","_this95","HemisphereLight","_Light","_super120","_this96","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super121","_this97","isSpotLightShadow","SpotLight","_Light2","_super122","_this98","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super123","_this99","_cubeDirections","_cubeUps","PointLight","_Light3","_super124","_this100","DirectionalLightShadow","_LightShadow3","_super125","_this101","isDirectionalLightShadow","DirectionalLight","_Light4","_super126","_this102","AmbientLight","_Light5","_super127","_this103","RectAreaLight","_Light6","_super128","_this104","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super129","_this105","MaterialLoader","_Loader8","_super130","_this106","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super131","_this107","BufferGeometryLoader","_Loader9","_super132","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super133","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super134","_this108","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super135","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","_LightProbe","_super136","_this109","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super137","_this110","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super138","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super139","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super140","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super141","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super142","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super143","_this116","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super144","_this117","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super145","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super146","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super147","_this120","GridHelper","_LineSegments2","_super148","_this121","PolarGridHelper","_LineSegments3","_super149","sectors","rings","_this122","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super150","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super151","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super152","_this125","Box3Helper","_LineSegments6","_super153","_this126","PlaneHelper","_Line3","_super154","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super155","headLength","headWidth","_this128","setDirection","setColor","AxesHelper","_LineSegments7","_super156","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","BoxBufferGeometry","_BoxGeometry","_super157","CapsuleBufferGeometry","_CapsuleGeometry","_super158","CircleBufferGeometry","_CircleGeometry","_super159","ConeBufferGeometry","_ConeGeometry","_super160","CylinderBufferGeometry","_CylinderGeometry2","_super161","DodecahedronBufferGeometry","_DodecahedronGeometry","_super162","ExtrudeBufferGeometry","_ExtrudeGeometry","_super163","IcosahedronBufferGeometry","_IcosahedronGeometry","_super164","LatheBufferGeometry","_LatheGeometry2","_super165","OctahedronBufferGeometry","_OctahedronGeometry","_super166","PlaneBufferGeometry","_PlaneGeometry","_super167","PolyhedronBufferGeometry","_PolyhedronGeometry5","_super168","RingBufferGeometry","_RingGeometry","_super169","ShapeBufferGeometry","_ShapeGeometry","_super170","SphereBufferGeometry","_SphereGeometry","_super171","TetrahedronBufferGeometry","_TetrahedronGeometry","_super172","TorusBufferGeometry","_TorusGeometry","_super173","TorusKnotBufferGeometry","_TorusKnotGeometry","_super174","TubeBufferGeometry","_TubeGeometry","_super175","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","Boolean","valueOf","_changeEvent","_startEvent","_endEvent","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","ONE","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","pointer","passive","THREE","_interopRequireWildcard","_OrbitControls","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","__esModule","default","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","innerWidth","innerHeight","planeGeometry","cubeMaterial","appendChild","controls","updatePlane","pos","clock","FPS","renderT","timeS"],"mappings":"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G,ECoC5CgxG,IDpCkD,CCoClD,CDpCoD,ACoC/CshE,CDpCgD,MCoCzC,GAAG,CAAC;ACuBlB,EF3DyDryK,ECqCvD+wG,GDrC4D,EAAE,ACqC9D,CDrC+D,ACqC1DuhE,OAAO,GAAG9jJ,QAAQ;EDrC0CvuB,GAAG,EAAE;AAAE,AE6D1E,CF7D2E,GCuCzE,KCsBOi7K,WAAWA,CAAA,EAAG;AF7DqDzlL,EE8DxE,EDtBF,ECsBM0lL,CF9DoE,CAAAx7K,CE8DjE,GAAGm7K,CF9D8D,GAAAn7K,KAAA,IE8DjD,CAAC0wB,UAAU,CAACC,QAAQ,CAACtkB,KAAK;AF7DrD,EE8DIi2C,EF9DE/hD,ACwCJ6wG,KDxCS,ACwCT,ACsBS,CDtBJwhE,EDxCO,CE8DC,IAAI,MDtBC,GAAG,CAAC,CAAC,CAAC;EDxCVxyK,AE+DZmiD,EDtBF6uD,IDzCoB,CCyCpB,ACsBS,CF/Da,ACyCjByhE,CDzCkB,CE+DX,CAAC,UDtBK,GAAGnmK,IAAI,CAACC,EAAE,CAAC,CAAC;EDzCLrM,AEiEvB,GFjE0B,EAAE,AEiExB,CFjEyB,GEiErBjE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGm/K,GAAG,CAACp/K,MAAM,EAAEC,CAAC,IAAE,CAAC,EAAE;EFjENmE,EC2CjC,ACwBIg7K,GAAG,CAACn/K,CAAC,EFnEiC,CEmEhC,CFnEkC,AEmEjC,CFnEkC,AEmEjC,GAAGqQ,IAAI,CAACK,MAAM,EAAE,GAAG,GAAG;EFnEatM,AEqE7C,EDzBF,UD5C2D,EAAE;AAAE,CAAC,CEsE9D06K,EDzBF/pE,KAAA,CAAK0hE,KCyBU,CAACpiJ,SDzBI,CCyBM,CAACC,CDzBJ,CAAE9B,MCyBU,CAACpN,CDzBH,CAAC,CAAC,QCyBY,GAAG,IAAI;AFtEW3rB,AEuEjE,IDzBAs7G,GD9CiE,CAAA7wG,CC8CjE,CAAKwyK,GD9C4D,GAAAxyK,KAAA,IC8C7C,GAAGsuB,QAAQ,CAAC,CAAC;AD7CnC,AEwEA,IFxEMnuB,AEwEF+6K,KAAK,GAAG,IFxEM,AEwEFpB,GFxEK,CAAC,CEwED,CAAC9xB,KAAK,EAAE;AFxENzyJ,AEyEvB,ID1BE,AC0BE4lL,GFzEmB,AEyEhB,CFzEgBh7K,EEyEb,EAAE,QFzEW,GAAAA,YAAA;AACvB,AEyEA,IFzEMC,AC+CJ,AC0BEg7K,OAAO,GAAG,CAAC,CFzEG,EEyEFD,CFzEK,CAAC,CEyEH;AFzEI5lL,AE0EvB,ID1BEs7G,AC0BEwqE,GF1EmB,CAAAj7K,CCgDrB,AC0BO,CD1BFqyK,EC0BK,CAAC,OF1EU,GAAAryK,ACgDH,GAAG,KAAK,IDhDL;AACvB,AE0EA,IF1EMC,ACgDJwwG,KAAA,AC0BOttD,CD1BFmvH,KC0BQnvH,CAAA,CF1EI,CE0ED,EF1EI,CAAC,ECgDH,GAAG,IAAI;ADhDHhuD,EE2EpBsyD,KF3EoB,CAAAxnD,aAAA,EE2EC,CF3EDA,AE2EEkjD,MAAM,CAAC,MF3ET;AACxB,IAAMjjD,ACiDJ,iBDjDqB,GAAG,CAAC;AAAC/K,EE4ExB,ED1BF,GDlD0B,CAAA+K,iBAAA,GAAAA,iBAAA;AAC5B,EE4EI,EF5EEC,ACkDJswG,EC0BMuzB,CAAC,ED1BP,CAAKuuC,AC0BKuI,KAAK,CAAC3yB,EF5EE,ECkDH,CDlDM,CAAC,CCkDJ,CC0BM,EAAE,CD1BJ;ADlDChzJ,EE6ErB8lL,ED1BFxqE,GDnDuB,AE6EhB,CF7EgBtwG,CCmDvB,CAAKqyK,AC0BKyI,KAAK,GAAGj3C,CD1BJ,AC0BK,GF7EI,ACmDN,GDnDM7jI,ACmDH,cDnDG;AACzB,EE6EI,EF7EEC,YAAY,GAAG,CAAC;AAACjL,EE8EnB,ED1BF,EC0BM8lL,CF9Ee,CAAA76K,GE8EV,GAAG46K,MF9EO,CE8EA,EF9EA56K,AE8EE,YF9EF;AACvB,IAAMC,ACoDJowG,AC0BI,KD1BJ,CAAKgiE,UDpDe,ECoDH,CDpDM,CAAC,CCoDJ,IAAI;ADpDCt9K,ICqDzBs7G,AC0BItyD,GF/EqB,CAAA99C,CCqDzB,CAAKqyK,EC0BO,CAACvvH,MAAM,CAACT,CD1BJ,GDrDS,ACqDN,CC0BM,EF/EAriD,ACqDH,AC0BKwrB,MAAM,CAAC,CAAC,CAAC,OF/EX;AAC3B,IAAMvrB,AE+EA26K,KAAK,GAAG,CAAC,GF/EG,GAAG,CAAC;AAA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AE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EA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b,IC6cEsjK,KAAK,CD7cG,AC6cFz0K,KAAK;MD3cjB,IC6cE,GD7cKqM,CC6cA0wC,GD7cI,CAACxrC,CC6cA,CAACshK,GD7cI,CAAE18K,KAAK,CC6cD,ED7cI,GC6cC,ED7cI,CAAE,EC6cD,EAAG;ID3crC,KAAKib,CC6cFymK,SD7cY,WC6cQ,CAAE9rK,KAAK,CAAE;MD3c/B,IC6cE,GD7cKM,IAAI,CAACkF,KAAK,CAAEpb,KAAK,GAAG,OAAO,CAAE;IAErC,IC6cE,CD7cGkb,IC6cEojK,KD7cO,AC6cF,CAACx0K,GAAG;MD3cf,IC6cE,GD7cKoM,CC6cA0wC,GD7cI,CAACxrC,CC6cA,CAAC0hK,GD7cI,CAAE98K,KAAK,AC6cF,GD7cK,EC6cA,GD7cK,CAAE,CC6cF,EAAG;ID3cpC,MC6cG2hL,kBAAkB,CAAE/rK,KAAK,CAAE;MD3c7B,IC6cE,ED7cI,IAAIjS,KAAK,CAAE,yBAAyB,CAAE;EAAC,IC6crC;ADzcX,IC6cE;AD3cF,IAAM0X,AC6cJ,SD7ca,AC6cJgkK,GD7cO,SC6cKA,CAAEzpK,KAAK,EAAG;ED5chCK,IC8cE,GD9cK,CC8cA2wC,CD9cE3wC,IC8cG,CAAC2P,ED9cG,KC8cI,KAAK,KAAK,IAAIghC,KAAK,CAAC81H,UAAU,KAAK,KAAK,IAAIh5K,KAAK,KAAK46K,KAAK,CAACC,IAAI,EAAG;ED7cvFnoK,IC+cER,GD/cK,EAAEQ,AC+cF,CAACooG,MD/cQ,QC+cM,EAAE;ED9cxBnoG,ICgdEuwC,KAAK,CAACjxC,EDhdI,EAAEU,SCgdO,CAAEwlK,EDhdG,SCgdQ,CAAE;ED/cpChlK,ICidE+qK,CDjdG,EAAE/qK,KAAK,QCidM,CAAEjB,KAAK,CAAE;EDhd3BoB,ICkdE4vC,KAAK,CAACjxC,KDldO,EAAEqB,MCkdI,CAAE8kK,QDldS,CCkdA,CAAE;EDjdlC3kK,ECmdC,ODndQ,EAAEA,SAAS;EACpBM,ECodC,SDpdU,ACodD0mK,EDpdG1mK,OCodM0mK,CAAEvoK,GDpdG,ECodE,EAAG;EDnd7B+B,IAAI,ACqdF,EDrdIA,ECqdCivC,EDrdG,GCqdE,CAAChhC,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","file":"main.0632549a.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '151';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, x,\n\t\t\t0, 1, y,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: false,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn clamp( _color.r * 255, 0, 255 ) << 16 ^ clamp( _color.g * 255, 0, 255 ) << 8 ^ clamp( _color.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${( r * 255 ) | 0},${( g * 255 ) | 0},${( b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n\tcopyColorsArray() { // @deprecated, r144\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector2sArray() { // @deprecated, r144\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector3sArray() { // @deprecated, r144\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector4sArray() { // @deprecated, r144\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge() { // @deprecated, r144\n\n\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead.' );\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tthis.applyBoneTransform( index, target );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$4.copy( geometry.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\t_ray$2.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$4.containsPoint( _ray$2.origin ) === false ) {\n\n\t\t\tif ( _ray$2.intersectSphere( _sphere$4, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$2.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, _ray$2, uv, uv2, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, _ray$2, uv, uv2, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, _ray$2, uv, uv2, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, _ray$2, uv, uv2, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv2, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputEncoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, 1, 0 );\n\t\tcameraPX.lookAt( 1, 0, 0 );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, 1, 0 );\n\t\tcameraNX.lookAt( - 1, 0, 0 );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\tcameraPY.lookAt( 0, 1, 0 );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, 1 );\n\t\tcameraNY.lookAt( 0, - 1, 0 );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\tcameraPZ.lookAt( 0, 0, 1 );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP_TANGENTSPACE\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\t\\n\\t\\tvec2 lodFudge = pow( 1.95, lod ) / fullSize;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec2 fullSize = vec2( textureSize( sampler, 0 ) );\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#ifdef USE_UV\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_UV2\\n\\tattribute vec2 uv2;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.encoding === sRGBEncoding ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.encoding === sRGBEncoding ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs2 ? '#define USE_UV2' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs2 ? '#define USE_UV2' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t} else {\n\n\t\t\t\t// default error reporting\n\n\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\tfragmentErrors\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 1 ) return 'uv2';\n\n\t\treturn 'uv';\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: HAS_NORMALMAP && !! geometry.attributes.tangent,\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs2: HAS_ATTRIBUTE_UV2,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tuseLegacyLights: renderer.useLegacyLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUvs2 )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 14 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = 33984 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && forceLinearEncoding === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === 3553 || ( textureTarget >= 34069 && textureTarget <= 34074 ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return 6403;\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst planes = new Set();\n\t\tconst planesLastChangedTimes = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraVR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraVR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraVR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraVR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tcamera.projectionMatrix.copy( cameraVR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraVR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPlanes = function () {\n\n\t\t\treturn planes;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraVR.matrix.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame.detectedPlanes } );\n\n\t\t\t\tlet planesToRemove = null;\n\n\t\t\t\tfor ( const plane of planes ) {\n\n\t\t\t\t\tif ( ! frame.detectedPlanes.has( plane ) ) {\n\n\t\t\t\t\t\tif ( planesToRemove === null ) {\n\n\t\t\t\t\t\t\tplanesToRemove = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tplanesToRemove.push( plane );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( planesToRemove !== null ) {\n\n\t\t\t\t\tfor ( const plane of planesToRemove ) {\n\n\t\t\t\t\t\tplanes.delete( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.delete( plane );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeremoved', data: plane } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const plane of frame.detectedPlanes ) {\n\n\t\t\t\t\tif ( ! planes.has( plane ) ) {\n\n\t\t\t\t\t\tplanes.add( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.set( plane, frame.lastChangedTime );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeadded', data: plane } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst lastKnownTime = planesLastChangedTimes.get( plane );\n\n\t\t\t\t\t\tif ( plane.lastChangedTime > lastKnownTime ) {\n\n\t\t\t\t\t\t\tplanesLastChangedTimes.set( plane, plane.lastChangedTime );\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'planechanged', data: plane } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( 35345, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.outputEncoding = LinearEncoding;\n\n\t\t// physical lights\n\n\t\tthis.useLegacyLights = true;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo();\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) bits |= 16384;\n\t\t\tif ( depth ) bits |= 256;\n\t\t\tif ( stencil ) bits |= 1024;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( 0 );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1024, 1024, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 && antialias === true ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = 32879;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = 35866;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( 3314, image.width );\n\t\t\t_gl.pixelStorei( 32878, image.height );\n\t\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n\tget autoUpdate() { // @deprecated, r144\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\treturn this.matrixWorldAutoUpdate;\n\n\t}\n\n\tset autoUpdate( value ) { // @deprecated, r144\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\tthis.matrixWorldAutoUpdate = value;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass BoxBufferGeometry extends BoxGeometry { // @deprecated, r144\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t}\n\n}\n\nclass CapsuleBufferGeometry extends CapsuleGeometry { // @deprecated, r144\n\n\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t}\n\n}\n\nclass CircleBufferGeometry extends CircleGeometry { // @deprecated, r144\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t}\n\n}\n\nclass ConeBufferGeometry extends ConeGeometry { // @deprecated, r144\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\nclass CylinderBufferGeometry extends CylinderGeometry { // @deprecated, r144\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\nclass DodecahedronBufferGeometry extends DodecahedronGeometry { // @deprecated, r144\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\nclass ExtrudeBufferGeometry extends ExtrudeGeometry { // @deprecated, r144\n\n\tconstructor( shapes, options ) {\n\n\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\tsuper( shapes, options );\n\n\t}\n\n}\n\nclass IcosahedronBufferGeometry extends IcosahedronGeometry { // @deprecated, r144\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\nclass LatheBufferGeometry extends LatheGeometry { // @deprecated, r144\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\tsuper( points, segments, phiStart, phiLength );\n\n\t}\n\n}\n\nclass OctahedronBufferGeometry extends OctahedronGeometry { // @deprecated, r144\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\nclass PlaneBufferGeometry extends PlaneGeometry { // @deprecated, r144\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t}\n\n}\n\nclass PolyhedronBufferGeometry extends PolyhedronGeometry { // @deprecated, r144\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\tsuper( vertices, indices, radius, detail );\n\n\t}\n\n}\n\nclass RingBufferGeometry extends RingGeometry { // @deprecated, r144\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t}\n\n}\n\nclass ShapeBufferGeometry extends ShapeGeometry { // @deprecated, r144\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\tsuper( shapes, curveSegments );\n\n\t}\n\n}\n\nclass SphereBufferGeometry extends SphereGeometry { // @deprecated, r144\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronBufferGeometry extends TetrahedronGeometry { // @deprecated, r144\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\nclass TorusBufferGeometry extends TorusGeometry { // @deprecated, r144\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t}\n\n}\n\nclass TorusKnotBufferGeometry extends TorusKnotGeometry { // @deprecated, r144\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t}\n\n}\n\nclass TubeBufferGeometry extends TubeGeometry { // @deprecated, r144\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import * as THREE from \"three\";\r\n// 导入轨道控制器\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\n// console.log(THREE);\r\n\r\n// 目标：控制3d物体移动\r\n\r\n// 1、创建场景\r\nconst scene = new THREE.Scene();\r\n\r\n// 2、创建相机\r\nconst camera = new THREE.PerspectiveCamera(\r\n  75,\r\n  window.innerWidth / window.innerHeight,\r\n  0.1,\r\n  1000\r\n);\r\n\r\nvar offsetX = 0\r\nvar offsetY = 0\r\n\r\n\r\n// 设置相机位置\r\ncamera.position.set(0, 0, 10);\r\nscene.add(camera);\r\n\r\n// 添加物体\r\n// 创建几何体\r\nconst planeGeometry = new THREE.PlaneGeometry(12, 12, 20, 20);\r\n\r\n\r\nconst cubeMaterial = new THREE.MeshBasicMaterial(\r\n    {color: 0xAFEEEE, \r\n    side: THREE.DoubleSide,\r\n    wireframe:true,\r\n    opacity: 0.5},\r\n    );\r\n// 根据几何体和材质创建物体\r\nconst plane = new THREE.Mesh(planeGeometry, cubeMaterial);\r\n\r\nplane.rotation.x = - Math.PI / 2.5\r\n\r\n// 将几何体添加到场景中\r\nscene.add(plane);\r\n\r\n// 初始化渲染器\r\nconst renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    alpha: true\r\n  });\r\n// 设置渲染的尺寸大小\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\nrenderer.setClearColor(0x000000, 0)\r\n\r\n// console.log(renderer);\r\n// 将webgl渲染的canvas内容添加到body\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\n// // 使用渲染器，通过相机将场景渲染进来\r\n// renderer.render(scene, camera);\r\n\r\n// 创建轨道控制器\r\nconst controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n// 添加坐标轴辅助器\r\n\r\nfunction updatePlane() {\r\n    let pos = planeGeometry.attributes.position.array\r\n    offsetX += 0.01\r\n    offsetY = 0\r\n\r\n    for(let i = 0; i < pos.length; i+=3) {\r\n\r\n      pos[i+2] = Math.random() * 0.8\r\n\r\n    }\r\n    planeGeometry.attributes.position.needsUpdate = true\r\n  }\r\n\r\nvar clock = new THREE.Clock();\r\nvar FPS = 60\r\nvar renderT = 1/FPS;\r\nvar timeS = 0;\r\nfunction render() {\r\n    requestAnimationFrame(render);\r\n\r\n    //   渲染下一帧的时候就会调用render函数\r\n    var T = clock.getDelta();\r\n    timeS = timeS + T;\r\n    // requestAnimationFrame默认调用render函数60次，通过时间判断，降低renderer.render执行频率\r\n    if (timeS > renderT) {\r\n      // 控制台查看渲染器渲染方法的调用周期，也就是间隔时间是多少\r\n      renderer.render(scene, camera); //执行渲染操作\r\n      timeS = 0;\r\n      updatePlane()\r\n    }\r\n}\r\n\r\nrender();"]}